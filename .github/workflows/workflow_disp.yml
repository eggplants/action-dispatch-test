name: Workflow dispatch

on: workflow_dispatch

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      TARGET_NAME: rep_disp.yml

    steps:
      - name: Set endpoint
        run: |
          base_path="https://api.github.com/repos/${GITHUB_REPOSITORY}"
          point_path="/actions/workflows/${TARGET_NAME}/runs"
          echo "RUNS_API_URL=${base_path}${point_path}" >> "$GITHUB_ENV"
          
      - name: Print RUNS_API_URL
        run: echo 'RUNS_API_URL:' "$RUNS_API_URL"
    
      - name: Set previous ${{ env.TARGET_NAME }} run id
        run: |
          curl -s "$RUNS_API_URL" \
          | jq 'if (.workflow_runs|length) == 0
                then 0 else .workflow_runs[0].id end' \
          | sed 's/^/PREV_RUN_ID=/' >> "$GITHUB_ENV"
      
      - name: Print PREV_RUN_ID
        run: echo 'PREV_RUN_ID:' "${PREV_RUN_ID}"

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          event-type: test

      - name: Wait for the end of ${{ env.TARGET_NAME }}
        run: |
          while :
          do
            echo "Try: $[i++]"
            curl -s "$RUNS_API_URL" > _

            {
              [ "$(jq '.workflow_runs|length' _)" -eq 0 ] \
              || [ "$(jq '.workflow_runs[0].id' _)" = "$PREV_RUN_ID" ]
            } && sleep "$[RANDOM%3+3]" && continue

            status="$(jq -r '.workflow_runs[0].status' _)"
            echo "Status: $status"
            [ "$status" = 'completed' ] && break
            sleep "$[RANDOM%3+3]"
          done

      - name: Print results of ${{ env.TARGET_NAME }}
        run: jq '.workflow_runs[0]|
                 {"id":.id,"status":.status,"conclusion":.conclusion}' _
